<Window x:Class="Uploader.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Uploader"
        WindowStyle="None"
        ResizeMode="NoResize"
        mc:Ignorable="d"
        Title="Uploader"
        AllowsTransparency="True"
        Background="Transparent"
        Height="600"
        WindowStartupLocation="CenterScreen"
        Width="900">
    <Window.Resources>
        <Style TargetType="Button" x:Key="close_button_style">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.Color" From="White" To="Red" Duration="0:0:0.3"></ColorAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.Color" From="Red" To="White" Duration="0:0:0.3"></ColorAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" x:Key="hide_button_style">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.Color" From="White" To="LightBlue" Duration="0:0:0.3"></ColorAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Background.Color" From="LightBlue" To="White" Duration="0:0:0.3"></ColorAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#region Color-->
        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <!--#end_region-->
        <ControlTemplate TargetType="Button" x:Key="button">
            <Border BorderThickness="1" CornerRadius="15" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" BorderBrush="Orange">
                <ContentControl Background="{TemplateBinding Background}"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"  HorizontalAlignment="Center" VerticalAlignment="Center">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                </ContentControl>
            </Border>
        </ControlTemplate>
        <ControlTemplate TargetType="RadioButton" x:Key="radio_button">
            <BulletDecorator Background="Transparent" Cursor="Hand">
                <BulletDecorator.Bullet>
                    <Grid Height="16" Width="16">
                        <Border Name="RadioOuter" Background="Transparent" BorderBrush="Gainsboro" BorderThickness="2" CornerRadius="5" />
                        <Border CornerRadius="5" Margin="4" Name="RadioMark" Background="orange" Visibility="Hidden" />
                    </Grid>
                </BulletDecorator.Bullet>
                <TextBlock>                    
                        <ContentPresenter Margin="4 0 0 0" Content="{TemplateBinding Content}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                </TextBlock>
            </BulletDecorator>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#FFADADAD" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate TargetType="CheckBox" x:Key="check_box">
            <BulletDecorator Background="Transparent">
                <BulletDecorator.Bullet>
                    <Border x:Name="Border"
                    Margin="{TemplateBinding Margin}"
                    Width="13"
                    Height="13"
                    CornerRadius="0"
                    Background="Transparent"
                    BorderThickness="1">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="{DynamicResource BorderLightColor}"
                                    Offset="0.0" />
                                        <GradientStop Color="{DynamicResource BorderDarkColor}"
                                    Offset="1.0" />
                                    </GradientStopCollection>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Grid>
                            <Path Visibility="Collapsed"
                      Width="7"
                      Height="7"
                      x:Name="CheckMark"
                      SnapsToDevicePixels="False"
                      StrokeThickness="2"
                      Data="M 0 0 L 7 7 M 0 7 L 7 0">
                                <Path.Stroke>
                                    <SolidColorBrush Color="Orange" />
                                </Path.Stroke>
                            </Path>
                            <Path Visibility="Collapsed"
                      Width="7"
                      Height="7"
                      x:Name="InderminateMark"
                      SnapsToDevicePixels="False"
                      StrokeThickness="2"
                      Data="M 0 7 L 7 0">
                                <Path.Stroke>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                </Path.Stroke>
                            </Path>
                        </Grid>
                    </Border>
                </BulletDecorator.Bullet>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Disabled" />
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="CheckMark">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="InderminateMark">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ContentPresenter Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
            </BulletDecorator>
        </ControlTemplate>
        <ControlTemplate TargetType="Button" x:Key="close_button">
            <Border  Background="{TemplateBinding Background}"  BorderBrush="Black" BorderThickness="1.5">
                <ContentControl Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="White" Margin="{TemplateBinding Margin}"  HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Image Source="Images/close.png" Height="15" Width="20" Margin="0"/>
                </ContentControl>
            </Border>
        </ControlTemplate>
        <ControlTemplate TargetType="Button" x:Key="hide_button">
            <Border  Background="{TemplateBinding Background}" Width="25"  BorderBrush="Black" BorderThickness="1.5">
                <ContentControl Width="25" Height="23"  Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}"  HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Image Source="Images/hide.png" Height="20" Width="16" HorizontalAlignment="Center" Margin="0 0 -4 -2" VerticalAlignment="Center"/>
                </ContentControl>
            </Border>
        </ControlTemplate>
        <ControlTemplate TargetType="TextBox" x:Key="text_box">
            <Border CornerRadius="5" Padding="0" BorderBrush="Orange" BorderThickness="2.5" Height="{TemplateBinding Height}"  Width="{TemplateBinding Width}" Background="{TemplateBinding Background}">
                <TextBox Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Text, UpdateSourceTrigger=PropertyChanged}" Name="remote_path_field" IsEnabled="{TemplateBinding IsEnabled}"  TextChanged="Remote_path_changed"/>
            </Border>
        </ControlTemplate>
    </Window.Resources>
    <Border Padding="7"  BorderThickness="2" BorderBrush="#01051A" CornerRadius="20" Background="#01051A">
        <DockPanel Margin="0,-6,0,0" LastChildFill="True" Background="#01051A" >
            <ResizeGrip Visibility="Collapsed"/>
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Background="#01051A"  Height="30px" MouseDown="StackPanel_MouseDown">
                    <TextBlock Margin="5 0 0 0" VerticalAlignment="Center" Foreground="White" FontSize="16" FontWeight="Bold">UPLOADER</TextBlock>
                    <Label Width="725"></Label>
                    <Button Template="{DynamicResource hide_button}" Style="{StaticResource hide_button_style}" Name="hide_app_button"  Margin="0 0 5 0" Background="White" Height="23" Width="25" Click="hide_app_button_Click">
                        <Image HorizontalAlignment="Right" VerticalAlignment="Bottom" Source="Images/hide.png" Height="23" Width="25" />
                    </Button>
                    <Button Template="{DynamicResource close_button}" Style="{StaticResource close_button_style}" x:Name="close_app_button"  Background="White" Height="23" Width="25" Click="close_app_button_Click">
                        <Image HorizontalAlignment="Right" VerticalAlignment="Bottom" Source="Images/close.png" Height="23" Width="25"/>
                    </Button>
                </StackPanel>

                <Grid Style="{DynamicResource MyGridStyle}">
                    <Grid.Resources>
                        <Style x:Key="MyGridStyle" TargetType="{x:Type Grid}">
                            <Setter Property="TextElement.Foreground" Value="LightGray"/>
                            <Setter Property="TextElement.FontSize" Value="12.6"/>
                            <Setter Property="TextBlock.Foreground" Value="LightGray"/>
                        </Style>
                        <Style TargetType="ProgressBar">
                            <Setter Property="Foreground" Value="Orange"/>
                        </Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="LightGray"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="LightGray"/>
                                    <Setter Property="Foreground" Value="Gray"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Orange"/>
                                    <Setter Property="BorderThickness" Value="1,1,2,2" />
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.3" From="White"  To="Black"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="0:0:0.3" From="Black"  To="White"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="Label">
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Style>
                        <Style TargetType="RadioButton">
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Style>
                        <Style TargetType="CheckBox">
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Style>
                        <Style TargetType="TextBox">
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="LightGray"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True">
                                    <Setter Property="Background" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>
                    <Grid.Background>
                        <SolidColorBrush Color="#01051A"/>
                    </Grid.Background>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="488"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="440"/>
                        <ColumnDefinition Width="440"/>
                    </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Vertical" Margin="2 3 0 0" Grid.ColumnSpan="2">
                    <Border BorderBrush="Orange" BorderThickness="0,0,3,0">
                        <StackPanel>
                            <Border BorderBrush="Orange" BorderThickness="1.5" CornerRadius="15" Height="72px" Width="438px">
                                <StackPanel HorizontalAlignment="Center">
                                    <StackPanel Orientation="Horizontal" Margin="0 2 0 0">
                                        <Label Target="{Binding ElementName=Choose_file_button}" Content="Выберите файл(ы) или директорию для загрузки на устройство:"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Button Template="{DynamicResource button}" Name="Choose_file_button" Click="Choose_files" MouseEnter="Change_color"  Content="Выбрать файлы" Height="30px" Width="100px"/>
                                        <Button Template="{DynamicResource button}" Margin="10 0 0 0" Name="Choose_directory_button" Width="140px" Height="30px" MouseEnter="Change_color" Click="Choose_directory_button_Click">Выбрать директорию</Button>
                                        <Button Template="{DynamicResource button}" Height="30px" Name="Remove_files_button" Width="170px" Margin="10 0 0 0" IsEnabled="false" Click="Remove_files_click">Очистить выбранные файлы</Button>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                            <Border Margin="0 5 0 0" BorderBrush="Orange" BorderThickness="1.5" CornerRadius="15" Height="107px" Width="438px">
                                <StackPanel>
                                    <TextBlock Margin="5 5 0 0" TextWrapping="Wrap"  Text="Укажите путь, куда необходимо загрузить файлы на устройстве.
                                                 В случае с загрузкой рекламы, программа автоматически распознаёт тип КМ и грузит в нужную директорию(icons или media).
                                                По умолчанию путь - /NAND_Flash/Media(Icons)/Download/start/ :">
                                    </TextBlock>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Width="400px">
                                        <CheckBox Template="{DynamicResource check_box}" IsChecked="False" Name="manual_remote_path" Margin="0 5 5 5" VerticalContentAlignment="Center" Height="23px" Content="Ввести вручную" Checked="manual_remote_path_Checked" Unchecked="manual_remote_path_Unchecked">
                                        </CheckBox>
                                        <TextBox Template="{DynamicResource text_box}" Name="remote_path_field" IsEnabled="False" Background="LightGray" Width="200px" Height="23px" HorizontalAlignment="Left" VerticalContentAlignment="Center" TextChanged="Remote_path_changed">
                                        </TextBox>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                            <Border Margin="0 5 0 0" BorderBrush="Orange" BorderThickness="1.5" CornerRadius="15" Height="85px" Width="438px">
                                <StackPanel>
                                    <TextBlock Margin="5 1 0 0"><Run Text="Выберите вариант загрузки:"/></TextBlock>
                                    <TextBlock TextWrapping="Wrap" Margin="5 3 0 2">Последовательно - загрузка по очереди по одному адресу<LineBreak/>
                     параллельно - до 5-ти адресов одновременно.</TextBlock>
                                    <StackPanel Orientation="Horizontal" Margin="0 3 0 0">
                                        <RadioButton Template="{DynamicResource radio_button}" Margin="5 0 0 0" Name="standart_upload_button" IsChecked="True" Checked="standart_upload_button_Checked">Последовательно</RadioButton>
                                        <RadioButton Template="{DynamicResource radio_button}" Name="parallel_upload_button" Margin=" 10 0 0 0" Checked="parallel_upload_button_Checked">Параллельно</RadioButton>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                            <Border Margin="0 5 0 0" BorderBrush="Orange" BorderThickness="1.5" CornerRadius="15" Height="206px" Width="438px">
                                <Grid Margin="0 1 0 0" Grid.Column="1" Grid.Row="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="90px"/>
                                        <RowDefinition Height="130px"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="170px"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="0" TextWrapping="WrapWithOverflow" TextAlignment="Left" Grid.ColumnSpan="2" Margin="3 6 0 0">Укажите IP-адреса устройств, на которые будут отправлены файлы.<LineBreak/>Указать IP-адреса можно двумя способами:<LineBreak/>1.Ввести вручную с разделителем(запятая)<LineBreak/>2.Выбрать текстовый файл(в текстовом файле IP-адреса также должны быть разделены запятой).</TextBlock>
                                    <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="0">
                                        <Label  Content="Выберите текстовый файл:" HorizontalAlignment="Center"/>
                                        <Button Template="{DynamicResource button}" VerticalAlignment="Top" Height="30px" Width="100px" Name="Choose_addresses_button" Content="Выбрать файл" Click="Choose_addresses_file" MouseEnter="Change_color"/>
                                    </StackPanel>
                                    <StackPanel Margin="0 0 5 0" Orientation="Vertical" Grid.Row="1" Grid.Column="1">
                                        <Label  Content="Введите IP-адреса:" HorizontalAlignment="Center"/>
                                        <Border BorderBrush="Orange" BorderThickness="2" CornerRadius="5" Width="170">
                                            <TextBox MaxHeight="90" Height="72" Name="addresses_field" TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True" MaxWidth="200px" VerticalScrollBarVisibility="Visible" Text="127.0.0.1" MouseEnter="Change_color" TextChanged="addresses_field_changed"/>
                                        </Border>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </StackPanel>
                    </Border>
                </StackPanel>
                <StackPanel Margin="-10 -60 0 0" Grid.Row="1"  Grid.Column="2" Grid.RowSpan="2">
                        <Label HorizontalAlignment="Left" Margin="25 0 0 0" Name="current_status" Content="Статус загрузки: "/>
                        <Label Content="Скорость загрузки:" Name="speed_transfer" HorizontalAlignment="Left" Margin="25 0 0 0"/>
                        <!--<Label Content="Осталось времени:" Name="time_transfer" HorizontalAlignment="Left" Margin="25 0 0 0"/> -->
                        <Label HorizontalAlignment="Left" Margin="25 0 0 0" Name="current_count_files" Content="Осталось загрузить файлов:"/>
                        <Label HorizontalAlignment="Center" Name="current_status_bar_text"  Content="Прогресс загрузки:"/>
                        <Border BorderBrush="Orange" BorderThickness="1.5" CornerRadius="5" Height="21px" Width="360px" Margin="-25 0 0 0">
                            <ProgressBar Minimum="0" Maximum="100" Value="0" Name="current_status_bar" Height="20px" Width="360px"/>
                        </Border>
                    </StackPanel>
                    <StackPanel Margin="0,5,40,0" Grid.Column="2" Grid.Row="0">
                        <Label HorizontalAlignment="Center" Content="Лог операций"/>
                        <Border BorderThickness="3" BorderBrush="Orange" Width="370px" CornerRadius="3">
                            <ScrollViewer CanContentScroll="True" Height="380">
                                <RichTextBox HorizontalScrollBarVisibility="Visible" IsReadOnly="True" MinHeight="350" Width="360" Height="380" FontSize="13px" FontWeight="Bold">
                                    <FlowDocument TextAlignment="Left" >
                                        <Paragraph Name="download_log"></Paragraph>
                                    </FlowDocument>
                                </RichTextBox>
                            </ScrollViewer>
                        </Border>
                    </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="1" Margin="-8 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Label Content="Вести запись в лог?"/>
                    <CheckBox Template="{StaticResource check_box}" Name="need_log_file_box" IsChecked="False" Margin="2 4 0 0"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" Name="Button_panel" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="86,5,0,0" >
                    <Button Template="{DynamicResource button}" Height="28px" Width="120px" Margin="0 0 15 0" Name="start_download_button" Content="Начать загрузку" Click="Start_Download_click"/>
                        <Button Template="{DynamicResource button}" Width="130px" Content="Остановить загрузку" x:Name="stop_download_button" IsEnabled="False" Click="stop_download_button_Click"/>
                    </StackPanel>
                </Grid>
            </DockPanel>
    </Border>
</Window>
